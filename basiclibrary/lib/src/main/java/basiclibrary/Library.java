/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;


import java.util.Random;

public class Library {

public static int [] roll (int n){
        int [] diceRolls= new int[n];

    for (int i = 0; i < n; i++) {
        diceRolls [i]=genarateRandomNumber();
    }
    return  diceRolls;}


public static int genarateRandomNumber(){

        Random random = new Random();
        int randomNumber = random.nextInt(6) + 1;
        return randomNumber;
    }
    public static boolean containsDuplicates(int[] arr) {
       for (int i = 0; i < arr.length; i++) {
        for (int j = i + 1; j < arr.length; j++) {
            if (arr[i] == arr[j]) {
                return true;
            }
        }
    }
        return false;

    }


    public static double calculateAverage(int[] arr) {
        if (arr.length == 0) {
            throw new IllegalArgumentException("Array is empty");
        }

        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }

        return (double) sum / arr.length;
    }
    public static int[] findArrayWithLowestAverage(int[][] arrayOfArrays) {
        if (arrayOfArrays.length == 0) {
            throw new IllegalArgumentException("Array of arrays is empty");
        }

        int[] lowestAvgArray = arrayOfArrays[0];
        double lowestAvg = calculateAverage(lowestAvgArray);

        for (int i = 1; i < arrayOfArrays.length; i++) {
            double currentAvg = calculateAverage(arrayOfArrays[i]);
            if (currentAvg < lowestAvg) {
                lowestAvg = currentAvg;
                lowestAvgArray = arrayOfArrays[i];
            }
        }

        return lowestAvgArray;
    }

    public static void printArray(int [] arr)  {
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }
}
