/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashSet;
import java.util.*;


public class App {
    public static String analyzeWeatherData(int[][] weeklyMonthTemperatures) {
        int minTemp = Integer.MAX_VALUE;
        int maxTemp = Integer.MIN_VALUE;
        HashSet<Integer> uniqueTemps = new HashSet<>();

        for (int[] weekTemps : weeklyMonthTemperatures) {
            for (int temp : weekTemps) {
                uniqueTemps.add(temp);
                minTemp = Math.min(minTemp, temp);
                maxTemp = Math.max(maxTemp, temp);
            }
        }

        StringBuilder result = new StringBuilder();
        result.append("High: ").append(maxTemp).append("\n");
        result.append("Low: ").append(minTemp).append("\n");
        for (int temp = minTemp; temp <= maxTemp; temp++) {
            if (!uniqueTemps.contains(temp)) {
                result.append("Never saw temperature: ").append(temp).append("\n");
            }
        }

        return result.toString();
    }


    public static String tally(List<String> votes) {
        Map<String, Integer> voteCount = new HashMap<>();

        for (String candidate : votes) {
            voteCount.put(candidate, voteCount.getOrDefault(candidate, 0) + 1);
        }

        String winner = "";
        int maxVotes = 0;

        for (Map.Entry<String, Integer> entry : voteCount.entrySet()) {
            if (entry.getValue() > maxVotes) {
                maxVotes = entry.getValue();
                winner = entry.getKey();
            }
        }

        return winner;
    }
    public static void checkForMissingSemicolons(Path filePath) throws IOException {
        try (BufferedReader reader = Files.newBufferedReader(filePath)) {
            String line;
            int lineNumber = 1;

            while ((line = reader.readLine()) != null) {
                line = line.trim();

                if (!line.isEmpty() && !line.endsWith("{") && !line.endsWith("}") &&
                        !line.contains("if") && !line.contains("else") &&
                        !line.endsWith(";")) {
                    System.out.println("Line " + lineNumber + ": Missing semicolon.");
                }

                lineNumber++;
            }
        }
    }

    public static void main(String[] args) {
        try {
            Path gates = Path.of("C:/Users/NASER GHARBIEH/projects/java-fundamentals/linter/app/src/main/resources/gates.js");
            //it did NOT work but with the Absolute path !!!
            checkForMissingSemicolons(gates);
        } catch (IOException e) {
            System.err.println("Error reading the file: " + e.toString());
        }
    }





}
